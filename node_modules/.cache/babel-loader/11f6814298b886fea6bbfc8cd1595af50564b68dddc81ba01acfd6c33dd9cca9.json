{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psych-narc\\\\client\\\\src\\\\components\\\\NewsCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Pagination, Card, CardGroup, Container } from 'react-bootstrap';\nimport NewsImg from '../assets/NewsImg.png';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport '../styles/utility-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsPerPage = 3; // Количество карточек на странице\nconst totalItems = 12; // Общее количество карточек\n\nfunction NewsCards() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n  // Функция для генерации массива карточек на основе текущей страницы\n  const getCurrentPageItems = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return Array.from({\n      length: totalItems\n    }, (_, index) => index).slice(startIndex, endIndex);\n  };\n\n  // Функция для обработки изменения страницы\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Функция для генерации элементов пагинации\n  const renderPaginationItems = () => {\n    const items = [];\n    for (let number = 1; number <= totalPages; number++) {\n      items.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: number === currentPage,\n        onClick: () => handlePageChange(number),\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this));\n    }\n    return items;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 3,\n        className: \"mt-5\",\n        children: getCurrentPageItems().map(itemIndex => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-News \",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: NewsImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Card title \", itemIndex + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, itemIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n        disabled: currentPage === 1,\n        onClick: () => handlePageChange(currentPage - 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), renderPaginationItems(), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n        disabled: currentPage === totalPages,\n        onClick: () => handlePageChange(currentPage + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(NewsCards, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = NewsCards;\nexport default NewsCards;\nvar _c;\n$RefreshReg$(_c, \"NewsCards\");","map":{"version":3,"names":["React","useState","Pagination","Card","CardGroup","Container","NewsImg","Col","Row","jsxDEV","_jsxDEV","itemsPerPage","totalItems","NewsCards","_s","currentPage","setCurrentPage","totalPages","Math","ceil","getCurrentPageItems","startIndex","endIndex","Array","from","length","_","index","slice","handlePageChange","pageNumber","renderPaginationItems","items","number","push","Item","active","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","xs","md","className","map","itemIndex","Img","variant","src","Body","Title","Text","Prev","disabled","Next","_c","$RefreshReg$"],"sources":["D:/Psych-narc/client/src/components/NewsCards.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Pagination, Card, CardGroup, Container } from 'react-bootstrap';\r\nimport NewsImg from '../assets/NewsImg.png';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport '../styles/utility-styles.css'\r\n\r\nconst itemsPerPage = 3; // Количество карточек на странице\r\nconst totalItems = 12; // Общее количество карточек\r\n\r\nfunction NewsCards() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n  // Функция для генерации массива карточек на основе текущей страницы\r\n  const getCurrentPageItems = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return Array.from({ length: totalItems }, (_, index) => index).slice(startIndex, endIndex);\r\n  };\r\n\r\n  // Функция для обработки изменения страницы\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Функция для генерации элементов пагинации\r\n  const renderPaginationItems = () => {\r\n    const items = [];\r\n    for (let number = 1; number <= totalPages; number++) {\r\n      items.push(\r\n        <Pagination.Item key={number} active={number === currentPage} onClick={() => handlePageChange(number)}>\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Container>\r\n      <Row xs={1} md={3} className=\"mt-5\">\r\n        {getCurrentPageItems().map((itemIndex) => (\r\n          <Col key={itemIndex}>\r\n            <Card className='card-News '>\r\n              <Card.Img variant=\"top\" src={NewsImg} />\r\n              <Card.Body>\r\n                <Card.Title>Card title {itemIndex + 1}</Card.Title>\r\n                <Card.Text>\r\n                  This is a longer card with supporting text below as a natural\r\n                  lead-in to additional content. This content is a little bit\r\n                  longer.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      </Container>\r\n      <Pagination>\r\n        <Pagination.Prev disabled={currentPage === 1} onClick={() => handlePageChange(currentPage - 1)} />\r\n        {renderPaginationItems()}\r\n        <Pagination.Next disabled={currentPage === totalPages} onClick={() => handlePageChange(currentPage + 1)} />\r\n      </Pagination>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}