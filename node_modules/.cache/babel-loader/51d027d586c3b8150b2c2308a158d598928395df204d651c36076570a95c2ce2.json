{"ast":null,"code":"import{$authHost,$host}from\"./index\";import jwt_decode from\"jwt-decode\";export const createDocument=async doc=>{const{data}=await $authHost.post('api/documents',doc);return data;};export const fetchDocument=async function(page){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;const{data}=await $host.get('api/documents',{params:{page,limit}});return data;};export const fetchOneDocument=async doc=>{const{data}=await $host.get('api/documents',doc);return data.filePath;};","map":{"version":3,"names":["$authHost","$host","jwt_decode","createDocument","doc","data","post","fetchDocument","page","limit","arguments","length","undefined","get","params","fetchOneDocument","filePath"],"sources":["D:/Psych-narc/client/src/http/documentsAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createDocument = async (doc) => {\r\n    const {data} = await $authHost.post('api/documents', doc)\r\n    return data\r\n}\r\n\r\nexport const fetchDocument = async (page, limit=3) => {\r\n    const {data} = await $host.get('api/documents', {params: {\r\n        page, limit\r\n    }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDocument = async (doc) => {\r\n    const { data } = await $host.get('api/documents', doc);\r\n    return data.filePath; \r\n}"],"mappings":"AAAA,OAAQA,SAAS,CAAEC,KAAK,KAAO,SAAS,CACxC,MAAO,CAAAC,UAAU,KAAM,YAAY,CAEnC,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,GAAG,EAAK,CACzC,KAAM,CAACC,IAAI,CAAC,CAAG,KAAM,CAAAL,SAAS,CAACM,IAAI,CAAC,eAAe,CAAEF,GAAG,CAAC,CACzD,MAAO,CAAAC,IAAI,CACf,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAG,cAAAA,CAAOC,IAAI,CAAc,IAAZ,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAC,CAAC,CAC7C,KAAM,CAACL,IAAI,CAAC,CAAG,KAAM,CAAAJ,KAAK,CAACY,GAAG,CAAC,eAAe,CAAE,CAACC,MAAM,CAAE,CACrDN,IAAI,CAAEC,KACV,CAAC,CAAC,CAAC,CACH,MAAO,CAAAJ,IAAI,CACf,CAAC,CAED,MAAO,MAAM,CAAAU,gBAAgB,CAAG,KAAO,CAAAX,GAAG,EAAK,CAC3C,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAJ,KAAK,CAACY,GAAG,CAAC,eAAe,CAAET,GAAG,CAAC,CACtD,MAAO,CAAAC,IAAI,CAACW,QAAQ,CACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}