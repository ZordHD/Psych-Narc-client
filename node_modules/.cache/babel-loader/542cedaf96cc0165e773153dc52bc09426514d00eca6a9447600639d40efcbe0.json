{"ast":null,"code":"import{$authHost,$host}from\".\";import{jwtDecode}from\"jwt-decode\";export const registration=async(name,surname,email,phone_num,password,permission)=>{const{data}=await $host.post('api/users/registration',{name,surname,email,phone_num,password,permission});localStorage.setItem('token',data.token);return jwtDecode(data.token);};export const login=async(email,password)=>{const{data}=await $host.post('api/users/login',{email,password});localStorage.setItem('token',data.token);return jwtDecode(data.token);};export const check=async()=>{const{data}=await $authHost.get('api/users/auth');localStorage.setItem('token',data.token);return jwtDecode(data.token);};export const updateUser=async(id,updatedUserData)=>{try{const token=localStorage.getItem('token');if(!token){throw new Error('Токен авторизации не найден');}const response=await $authHost.patch(\"api/users/\".concat(id),updatedUserData,{headers:{'Authorization':\"Bearer \".concat(token)}});return response.data;}catch(error){throw error;}};","map":{"version":3,"names":["$authHost","$host","jwtDecode","registration","name","surname","email","phone_num","password","permission","data","post","localStorage","setItem","token","login","check","get","updateUser","id","updatedUserData","getItem","Error","response","patch","concat","headers","error"],"sources":["D:/Psych-narc/client/src/http/userAPI.js"],"sourcesContent":["import { $authHost, $host } from \".\";\r\nimport {jwtDecode} from \"jwt-decode\"\r\n\r\nexport const registration = async (name, surname, email, phone_num, password, permission) => {\r\n    const  {data} = await $host.post('api/users/registration', {name, surname, email, phone_num, password, permission})\r\n    localStorage.setItem('token', data.token)\r\n    return jwtDecode(data.token)\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const {data} = await $host.post('api/users/login', {email, password})\r\n    localStorage.setItem('token', data.token)\r\n    return jwtDecode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    const {data} = await $authHost.get('api/users/auth')\r\n    localStorage.setItem('token', data.token)\r\n    return jwtDecode(data.token)\r\n}\r\n\r\nexport const updateUser = async (id, updatedUserData) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n  \r\n      if (!token) {\r\n        throw new Error('Токен авторизации не найден');\r\n      }\r\n  \r\n      const response = await $authHost.patch(`api/users/${id}`, updatedUserData, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n  \r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };"],"mappings":"AAAA,OAASA,SAAS,CAAEC,KAAK,KAAQ,GAAG,CACpC,OAAQC,SAAS,KAAO,YAAY,CAEpC,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOC,IAAI,CAAEC,OAAO,CAAEC,KAAK,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,UAAU,GAAK,CACzF,KAAO,CAACC,IAAI,CAAC,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,CAAC,wBAAwB,CAAE,CAACP,IAAI,CAAEC,OAAO,CAAEC,KAAK,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,UAAU,CAAC,CAAC,CACnHG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,KAAK,CAAC,CACzC,MAAO,CAAAZ,SAAS,CAACQ,IAAI,CAACI,KAAK,CAAC,CAChC,CAAC,CAED,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOT,KAAK,CAAEE,QAAQ,GAAK,CAC5C,KAAM,CAACE,IAAI,CAAC,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,CAAC,iBAAiB,CAAE,CAACL,KAAK,CAAEE,QAAQ,CAAC,CAAC,CACrEI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,KAAK,CAAC,CACzC,MAAO,CAAAZ,SAAS,CAACQ,IAAI,CAACI,KAAK,CAAC,CAChC,CAAC,CAED,MAAO,MAAM,CAAAE,KAAK,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAACN,IAAI,CAAC,CAAG,KAAM,CAAAV,SAAS,CAACiB,GAAG,CAAC,gBAAgB,CAAC,CACpDL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,KAAK,CAAC,CACzC,MAAO,CAAAZ,SAAS,CAACQ,IAAI,CAACI,KAAK,CAAC,CAChC,CAAC,CAED,MAAO,MAAM,CAAAI,UAAU,CAAG,KAAAA,CAAOC,EAAE,CAAEC,eAAe,GAAK,CACrD,GAAI,CACF,KAAM,CAAAN,KAAK,CAAGF,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CAACP,KAAK,CAAE,CACV,KAAM,IAAI,CAAAQ,KAAK,CAAC,6BAA6B,CAAC,CAChD,CAEA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAvB,SAAS,CAACwB,KAAK,cAAAC,MAAA,CAAcN,EAAE,EAAIC,eAAe,CAAE,CACzEM,OAAO,CAAE,CACP,eAAe,WAAAD,MAAA,CAAYX,KAAK,CAClC,CACF,CAAC,CAAC,CAEF,MAAO,CAAAS,QAAQ,CAACb,IAAI,CACtB,CAAE,MAAOiB,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}