{"ast":null,"code":"var _jsxFileName = \"D:\\\\Psych-narc\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport './fonts/font.css';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '.';\nimport { check } from './http/userAPI';\nimport { Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nprocess.env.DANGEROUSLY_DISABLE_HOST_CHECK = 'true';\nconst App = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(data);\n      user.setIsAuth(true);\n    }).finally(() => setLoading(false));\n  }, []);\n  if (loading) /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"grow\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}, \"eoNEOO0XgZmELjwcufg9rFYsGdc=\")), \"eoNEOO0XgZmELjwcufg9rFYsGdc=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useContext","useEffect","useState","ReactDOM","BrowserRouter","AppRouter","observer","Context","check","Spinner","jsxDEV","_jsxDEV","process","env","DANGEROUSLY_DISABLE_HOST_CHECK","App","_s","_c","user","loading","setLoading","then","data","setUser","setIsAuth","finally","animation","fileName","_jsxFileName","lineNumber","columnNumber","children","_c2","$RefreshReg$"],"sources":["D:/Psych-narc/client/src/App.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport './fonts/font.css';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '.';\nimport { check } from './http/userAPI';\nimport { Spinner } from 'react-bootstrap';\nprocess.env.DANGEROUSLY_DISABLE_HOST_CHECK = 'true';\n\nconst App = observer(() => {\n  const {user} = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n        user.setUser(data)\n        user.setIsAuth(true)\n    }).finally(() => setLoading(false))\n}, [])\n\n if(loading)(\n  <Spinner animation='grow'/>\n )\n  return (\n  <BrowserRouter>\n      <AppRouter />\n  </BrowserRouter>\n  );\n});\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,GAAG;AAC3B,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1CC,OAAO,CAACC,GAAG,CAACC,8BAA8B,GAAG,MAAM;AAEnD,MAAMC,GAAG,GAAAC,EAAA,CAAGV,QAAQ,CAAAW,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACzB,MAAM;IAACE;EAAI,CAAC,GAAGlB,UAAU,CAACO,OAAO,CAAC;EAClC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,CAAC,CAACa,IAAI,CAACC,IAAI,IAAI;MACjBJ,IAAI,CAACK,OAAO,CAACD,IAAI,CAAC;MAClBJ,IAAI,CAACM,SAAS,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CAACC,OAAO,CAAC,MAAML,UAAU,CAAC,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEL,IAAGD,OAAO,EAAC,aACVR,OAAA,CAACF,OAAO;IAACiB,SAAS,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EAE3B,oBACAnB,OAAA,CAACP,aAAa;IAAA2B,QAAA,eACVpB,OAAA,CAACN,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB,CAAC,kCAAC;AAACE,GAAA,GAnBGjB,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAE,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}